[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "time_series_metadata"
description = """
This package provides a Python implementation of a metadata scheme\
for time-series with measurement uncertainties.\
"""
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "metadata",
    "time-series",
    "uncertainty",
    "metrology"
]
classifiers = [
    "Topic :: Utilities",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Typing :: Typed"
]
version = "0.1.1"
authors = [
    {name = "Maximilian Gruber"},
    {name = "Bj√∂rn Ludwig", email = "bjoern.ludwig@ptb.de"},
    {name = "Bang Xiang Yong"},
    {name = "Benedikt Seeger"}
]

[license]
text = "LGPLv3+"
file = "LICENSE"

[project.optional-dependencies]
dev = [
    "black",
    "pytest",
    "python-semantic-release",
    "recommonmark",
    "sphinx",
    "sphinx-rtd-theme",
    "tox",
    "twine"
]

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.packages.find]
include = ["time_series_metadata"]
exclude = ["tests_metadata"]

[project.urls]
homepage = "https://github.com/PTB-M4D/time-series-metadata"
documentation = "https://time-series-metadata.readthedocs.io"
repository = "https://github.com/PTB-M4D/time-series-metadata"
changelog = "https://github.com/PTB-M4D/time-series-metadata/blob/main/CHANGELOG.md"

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]
build_command="python -m build"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "^ci",
    "^build",
    "^chore",
    "^refactor",
    "^Update deps",
    "^Merge pull request ",
    "^Initial commit"
]

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["docs", "feat", "fix", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

