[semantic_release]
# The file(s) and variable name of where the version number is stored.
version_variable=VERSION:__version__
# The way we get and set the new version. Can be commit or tag.
# If set to tag, will get the current version from the latest tag matching vX.Y.Z.
# This wonâ€™t change the source defined in version_variable.
# If set to commit, will get the current version from the source defined in
# version_variable, edit the file and commit it.
version_source=commit
# Import path of a Python function that can parse commit messages and return
# information about the commit.
commit_parser=semantic_release.history.emoji_parser
# Comma-separated list of emojis used by semantic_release.history.emoji_parser to
# create major releases.
major_emoji=:boom:
# Comma-separated list of emojis used by semantic_release.history.emoji_parser to
# create minor releases.
minor_emoji=:sparkles:,:children_crossing:,:lipstick:,:iphone:,:egg:,:chart_with_upwards_trend:
# Comma-separated list of emojis used by semantic_release.history.emoji_parser to
# create patch releases.
patch_emoji=:ambulance:,:lock:,:bug:,:zap:,:goal_net:,:alien:,:wheelchair:,:speech_balloon:,:mag:,:apple:,:penguin:,:checkered_flag:,:robot:,:green_apple:
# If set to false the pypi uploading will be disabled.
upload_to_pypi=false
# If set to false, do not upload distributions to GitHub releases. This does actually
# only correspond to the bdist wheel version of a release. The GitHub release will be
# created anyway.
upload_to_release=false
# The branch to run releases from.
branch=main
# The name of your hvcs. Currently only GitHub and GitLab are supported.
hvcs=github
# Whether or not to commit changes when bumping version.
commit_version_number=true
# The name of the file where the changelog is kept, relative to the root of the repo.
changelog_file=CHANGELOG.md
# Comma-separated list of sections to display in the changelog. They will be
# displayed in the order they are given. The available options depend on the commit
# parser used. We choose all possible emojis but none of the angular options, which
# we assume to be used in the upstream repositories. This assures we keep control
# over our changelog.
changelog_sections=:boom:,:sparkles:,:children_crossing:,:lipstick:,:iphone:,:egg:,:chart_with_upwards_trend:,:ambulance:,:lock:,:bug:,:zap:,:goal_net:,:alien:,:wheelchair:,:speech_balloon:,:mag:,:apple:,:penguin:,:checkered_flag:,:robot:,:green_apple:,
# A comma-separated list of the import paths of components to include in the changelog.
changelog_components=semantic_release.changelog.changelog_headers,semantic_release.changelog.compare_url
