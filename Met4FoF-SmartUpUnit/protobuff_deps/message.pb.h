/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _DescriptionMessage_DESCRIPTION_TYPE {
    DescriptionMessage_DESCRIPTION_TYPE_PHYSICAL_QUANTITY,
    DescriptionMessage_DESCRIPTION_TYPE_UNIT,
    DescriptionMessage_DESCRIPTION_TYPE_UNCERTAINTY_TYPE,
    DescriptionMessage_DESCRIPTION_TYPE_RESOLUTION,
    DescriptionMessage_DESCRIPTION_TYPE_MIN_SCALE,
    DescriptionMessage_DESCRIPTION_TYPE_MAX_SCALE,
	DescriptionMessage_LAST
} DescriptionMessage_DESCRIPTION_TYPE;
#define _DescriptionMessage_DESCRIPTION_TYPE_MIN DescriptionMessage_DESCRIPTION_TYPE_PHYSICAL_QUANTITY
#define _DescriptionMessage_DESCRIPTION_TYPE_MAX DescriptionMessage_DESCRIPTION_TYPE_MAX_SCALE
#define _DescriptionMessage_DESCRIPTION_TYPE_ARRAYSIZE ((DescriptionMessage_DESCRIPTION_TYPE)(DescriptionMessage_DESCRIPTION_TYPE_MAX_SCALE+1))

/* Struct definitions */
typedef struct _DataMessage {
    uint32_t id;
    uint32_t sample_number;
    uint32_t unix_time;
    uint32_t unix_time_nsecs;
    uint32_t time_uncertainty;
    float Data_01;
    bool has_Data_02;
    float Data_02;
    bool has_Data_03;
    float Data_03;
    bool has_Data_04;
    float Data_04;
    bool has_Data_05;
    float Data_05;
    bool has_Data_06;
    float Data_06;
    bool has_Data_07;
    float Data_07;
    bool has_Data_08;
    float Data_08;
    bool has_Data_09;
    float Data_09;
    bool has_Data_10;
    float Data_10;
    bool has_Data_11;
    float Data_11;
    bool has_Data_12;
    float Data_12;
    bool has_Data_13;
    float Data_13;
    bool has_Data_14;
    float Data_14;
    bool has_Data_15;
    float Data_15;
    bool has_Data_16;
    float Data_16;
/* @@protoc_insertion_point(struct:DataMessage) */
} DataMessage;


typedef struct _DescriptionMessage {
    uint32_t id;
    char Sensor_name[40];
    DescriptionMessage_DESCRIPTION_TYPE Description_Type;
    bool has_str_Data_01;
    char str_Data_01[40];
    bool has_str_Data_02;
    char str_Data_02[40];
    bool has_str_Data_03;
    char str_Data_03[40];
    bool has_str_Data_04;
    char str_Data_04[40];
    bool has_str_Data_05;
    char str_Data_05[40];
    bool has_str_Data_06;
    char str_Data_06[40];
    bool has_str_Data_07;
    char str_Data_07[40];
    bool has_str_Data_08;
    char str_Data_08[40];
    bool has_str_Data_09;
    char str_Data_09[40];
    bool has_str_Data_10;
    char str_Data_10[40];
    bool has_str_Data_11;
    char str_Data_11[40];
    bool has_str_Data_12;
    char str_Data_12[40];
    bool has_str_Data_13;
    char str_Data_13[40];
    bool has_str_Data_14;
    char str_Data_14[40];
    bool has_str_Data_15;
    char str_Data_15[40];
    bool has_str_Data_16;
    char str_Data_16[40];
    bool has_f_Data_01;
    float f_Data_01;
    bool has_f_Data_02;
    float f_Data_02;
    bool has_f_Data_03;
    float f_Data_03;
    bool has_f_Data_04;
    float f_Data_04;
    bool has_f_Data_05;
    float f_Data_05;
    bool has_f_Data_06;
    float f_Data_06;
    bool has_f_Data_07;
    float f_Data_07;
    bool has_f_Data_08;
    float f_Data_08;
    bool has_f_Data_09;
    float f_Data_09;
    bool has_f_Data_10;
    float f_Data_10;
    bool has_f_Data_11;
    float f_Data_11;
    bool has_f_Data_12;
    float f_Data_12;
    bool has_f_Data_13;
    float f_Data_13;
    bool has_f_Data_14;
    float f_Data_14;
    bool has_f_Data_15;
    float f_Data_15;
    bool has_f_Data_16;
    float f_Data_16;
/* @@protoc_insertion_point(struct:DescriptionMessage) */
} DescriptionMessage;


/* Initializer values for message structs */

#define DataMessage_init_default                 {0, 0, 0, 0, 0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define DescriptionMessage_init_default          {0, "", _DescriptionMessage_DESCRIPTION_TYPE_MIN, false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define DataMessage_init_zero                    {0, 0, 0, 0, 0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define DescriptionMessage_init_zero             {0, "", _DescriptionMessage_DESCRIPTION_TYPE_MIN, false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, "", false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

static const DescriptionMessage empty_DescriptionMessage=DescriptionMessage_init_default ;
static const DataMessage empty_DataMessage=DataMessage_init_default ;
/* Field tags (for use in manual encoding/decoding) */
#define DataMessage_id_tag                       1
#define DataMessage_sample_number_tag            2
#define DataMessage_unix_time_tag                3
#define DataMessage_unix_time_nsecs_tag          4
#define DataMessage_time_uncertainty_tag         5
#define DataMessage_Data_01_tag                  6
#define DataMessage_Data_02_tag                  7
#define DataMessage_Data_03_tag                  8
#define DataMessage_Data_04_tag                  9
#define DataMessage_Data_05_tag                  10
#define DataMessage_Data_06_tag                  11
#define DataMessage_Data_07_tag                  12
#define DataMessage_Data_08_tag                  13
#define DataMessage_Data_09_tag                  14
#define DataMessage_Data_10_tag                  15
#define DataMessage_Data_11_tag                  16
#define DataMessage_Data_12_tag                  17
#define DataMessage_Data_13_tag                  18
#define DataMessage_Data_14_tag                  19
#define DataMessage_Data_15_tag                  20
#define DataMessage_Data_16_tag                  21
#define DescriptionMessage_id_tag                1
#define DescriptionMessage_Sensor_name_tag       2
#define DescriptionMessage_Description_Type_tag  3
#define DescriptionMessage_str_Data_01_tag       4
#define DescriptionMessage_str_Data_02_tag       5
#define DescriptionMessage_str_Data_03_tag       6
#define DescriptionMessage_str_Data_04_tag       7
#define DescriptionMessage_str_Data_05_tag       8
#define DescriptionMessage_str_Data_06_tag       9
#define DescriptionMessage_str_Data_07_tag       10
#define DescriptionMessage_str_Data_08_tag       11
#define DescriptionMessage_str_Data_09_tag       12
#define DescriptionMessage_str_Data_10_tag       13
#define DescriptionMessage_str_Data_11_tag       14
#define DescriptionMessage_str_Data_12_tag       15
#define DescriptionMessage_str_Data_13_tag       16
#define DescriptionMessage_str_Data_14_tag       17
#define DescriptionMessage_str_Data_15_tag       18
#define DescriptionMessage_str_Data_16_tag       19
#define DescriptionMessage_f_Data_01_tag         20
#define DescriptionMessage_f_Data_02_tag         21
#define DescriptionMessage_f_Data_03_tag         22
#define DescriptionMessage_f_Data_04_tag         23
#define DescriptionMessage_f_Data_05_tag         24
#define DescriptionMessage_f_Data_06_tag         25
#define DescriptionMessage_f_Data_07_tag         26
#define DescriptionMessage_f_Data_08_tag         27
#define DescriptionMessage_f_Data_09_tag         28
#define DescriptionMessage_f_Data_10_tag         29
#define DescriptionMessage_f_Data_11_tag         30
#define DescriptionMessage_f_Data_12_tag         31
#define DescriptionMessage_f_Data_13_tag         32
#define DescriptionMessage_f_Data_14_tag         33
#define DescriptionMessage_f_Data_15_tag         34
#define DescriptionMessage_f_Data_16_tag         35

/* Struct field encoding specification for nanopb */
#define DataMessage_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, UINT32, id, 1) \
X(a, STATIC, REQUIRED, UINT32, sample_number, 2) \
X(a, STATIC, REQUIRED, UINT32, unix_time, 3) \
X(a, STATIC, REQUIRED, UINT32, unix_time_nsecs, 4) \
X(a, STATIC, REQUIRED, UINT32, time_uncertainty, 5) \
X(a, STATIC, REQUIRED, FLOAT, Data_01, 6) \
X(a, STATIC, OPTIONAL, FLOAT, Data_02, 7) \
X(a, STATIC, OPTIONAL, FLOAT, Data_03, 8) \
X(a, STATIC, OPTIONAL, FLOAT, Data_04, 9) \
X(a, STATIC, OPTIONAL, FLOAT, Data_05, 10) \
X(a, STATIC, OPTIONAL, FLOAT, Data_06, 11) \
X(a, STATIC, OPTIONAL, FLOAT, Data_07, 12) \
X(a, STATIC, OPTIONAL, FLOAT, Data_08, 13) \
X(a, STATIC, OPTIONAL, FLOAT, Data_09, 14) \
X(a, STATIC, OPTIONAL, FLOAT, Data_10, 15) \
X(a, STATIC, OPTIONAL, FLOAT, Data_11, 16) \
X(a, STATIC, OPTIONAL, FLOAT, Data_12, 17) \
X(a, STATIC, OPTIONAL, FLOAT, Data_13, 18) \
X(a, STATIC, OPTIONAL, FLOAT, Data_14, 19) \
X(a, STATIC, OPTIONAL, FLOAT, Data_15, 20) \
X(a, STATIC, OPTIONAL, FLOAT, Data_16, 21)
#define DataMessage_CALLBACK NULL
#define DataMessage_DEFAULT NULL

#define DescriptionMessage_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, UINT32, id, 1) \
X(a, STATIC, REQUIRED, STRING, Sensor_name, 2) \
X(a, STATIC, REQUIRED, UENUM, Description_Type, 3) \
X(a, STATIC, OPTIONAL, STRING, str_Data_01, 4) \
X(a, STATIC, OPTIONAL, STRING, str_Data_02, 5) \
X(a, STATIC, OPTIONAL, STRING, str_Data_03, 6) \
X(a, STATIC, OPTIONAL, STRING, str_Data_04, 7) \
X(a, STATIC, OPTIONAL, STRING, str_Data_05, 8) \
X(a, STATIC, OPTIONAL, STRING, str_Data_06, 9) \
X(a, STATIC, OPTIONAL, STRING, str_Data_07, 10) \
X(a, STATIC, OPTIONAL, STRING, str_Data_08, 11) \
X(a, STATIC, OPTIONAL, STRING, str_Data_09, 12) \
X(a, STATIC, OPTIONAL, STRING, str_Data_10, 13) \
X(a, STATIC, OPTIONAL, STRING, str_Data_11, 14) \
X(a, STATIC, OPTIONAL, STRING, str_Data_12, 15) \
X(a, STATIC, OPTIONAL, STRING, str_Data_13, 16) \
X(a, STATIC, OPTIONAL, STRING, str_Data_14, 17) \
X(a, STATIC, OPTIONAL, STRING, str_Data_15, 18) \
X(a, STATIC, OPTIONAL, STRING, str_Data_16, 19) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_01, 20) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_02, 21) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_03, 22) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_04, 23) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_05, 24) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_06, 25) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_07, 26) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_08, 27) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_09, 28) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_10, 29) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_11, 30) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_12, 31) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_13, 32) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_14, 33) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_15, 34) \
X(a, STATIC, OPTIONAL, FLOAT, f_Data_16, 35)
#define DescriptionMessage_CALLBACK NULL
#define DescriptionMessage_DEFAULT NULL

extern const pb_msgdesc_t DataMessage_msg;
extern const pb_msgdesc_t DescriptionMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DataMessage_fields &DataMessage_msg
#define DescriptionMessage_fields &DescriptionMessage_msg

/* Maximum encoded size of messages (where known) */
#define DataMessage_size                         116
#define DescriptionMessage_size                  805

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
